@font-face {
  font-family: 'nymphetteregular';
  src: url('Nymphette-webfont.eot');
  src: url('Nymphette-webfont.eot?#iefix') format('embedded-opentype'),
    /*url('Nymphette-webfont.woff2') format('woff2'),*/
    url('Nymphette-webfont.woff') format('woff'),
    url('Nymphette-webfont.ttf') format('truetype'),
    url('Nymphette-webfont.svg#nymphetteregular') format('svg');
  font-weight: normal;
  font-style: normal;
}

h1 {
  font-size: 3.5rem;
  font-family: 'PT Serif', serif;
  line-height: 1.5em;
}

.h1Subtitle {
  font-family: 'Dancing Script', cursive;
}

body {
  margin: 0;
  padding: 0;
  border: 0;
}

/*just for testing*/
.tab2 {
  position: absolute;
  display: inline-block;
  font-size: 4rem;
  height: 90px;
  width: 200px;
  right: 15vw;
  top: -100vh -20px;
  /*change to button making it less buttony*/
  justify-content: center;
  align-content: center;
  border: none;
  padding: 0;
  margin: 0;
  text-decoration: none;
  background: inherit;
  color: inherit;
  font-family: inherit;
  cursor: pointer;
  text-align: inherit;
}

.tab2::before {
  content: '';
  /* To generate the box */
  position: absolute;
  /*  top: 0px; right: 0px; bottom: 0px; left:0px;*/
  display: inline-block;
  background: DimGrey;
  transform: perspective(4px) rotateX(-1deg);
  height: 90px;
  width: 200px;
  border-bottom-right-radius: 30px 50px;
  border-bottom-left-radius: 30px 50px;
  line-height: 35px;
  text-overflow: ellipsis;
}

.tab2>Img {
  max-height: 50px;
  max-width: 50px;
  padding: 0px;
  position: relative;
  margin: 10px 10px 30px;
}

.tab2>i {
  position: relative;
  margin: 10px 10px 10px 30px;
  color: white;
}

#goUp {
  display: inline-block;
  width: 50px;
  height: 50px;
  bottom: 30px;
  right: 30px;
  position: fixed;
  z-index: 1000;
}

.btnbefore {
  background-color: yellow;
}

.btnafter {
  background-color: purple;
}

.page2X0Y1 {
  position: relative;
  height: 100vh;
  width: 100vw;
  /*need to blend edges*/
  background:
    /*top level*/
    /*pink yellow slice*/
    linear-gradient(165deg, white, yellow 43%, yellow, transparent, plum, plum 45%, white),
    /*middle black layer with transparent cornet*/
    linear-gradient(to top right, black 70%, transparent 71%),
    /*bottom layer that will be reveal through gap on both*/
    linear-gradient(165deg, white, yellow, plum, white);
}

.pg2Do {
  position: absolute;
  height: 50vh;
  width: 50vw;
  /*to match the angle of the gradient will have to find the viewport ratio*/
  transform: rotate(-15deg);
  top: 0;
  left: 0vw;
  font-family: 'Noto Sans', sans-serif;
  font-size: 5rem;
  text-decoration: underline;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: pre;
}

/*
effect i want is two different colours of wood with a 45 degree angle black line for the join between in bottom left corner and a grey line to be the transparency


hitting same issues with my background i want to apply an image or gradient but the requires whole background an excludes being able to make it curved aswell which needed for handle.

some ways to overcome this would be pseudo element to colour over the top of the border however this will still not result in diagonal as will be working with a whole border just not showing some so wont get the join i want

by using pseudo i could do an element up a pixel one across a pixel and have a border with transparencies except bottom for one left for other
and put a black square behind corner

I could then chop the top (tried to clip it but not sure can clip divs think just images and cant hide it as need to be transparent)

one way to do it would be to make
one beam a full border and just set width to 0 where dont want it
and just make the next layer an image change perspective to get angle

or a border over the top of both which is the pattern with transparency it has the grain and is the same over all borders but looks different because of the colours pushing through, if grain complex enough it will look alright, if it is possible to use images with alpha could do it that way

*/
.case2position {
  /*a few marbles width*/
  width: 120px;
  height: 70vh;
  position: absolute;
  z-index: 86;
  right: -70px;
  /*to accommodate border something like this would be useful top: 50vh - 40px;*/
  top: 10vh;
  margin: 4em auto;
}

.case2border {
  filter: blur(1.5px);
  width: inherit;
  height: inherit;
  position: absolute;
  border-top: 5px solid rgba(103, 128, 100, 0.7);
  border-right: 0px solid black;
  border-bottom: 40px solid black;
  border-left: 40px solid orange;
  border-right: 0;
  /*Now need it circle or even better semi circle*/
}

.case2border:before {
  content: "";
  position: absolute;
  bottom: -40px;
  left: -36px;
  z-index: 80;/*-1;*/

  /*will this change to inherit*/
  width: inherit;
  height: inherit;
  border-bottom: 40px solid brown;
  border-left: 40px solid transparent;
}

.case2border:after {
  /*outline is here because here i can alter the height and width without effecting other elements
  the element will never be dragged into full view so right side doesnt matter
  altering the height does over extend the border so i will need to clip

  */
  content: "";
  position: absolute;
  bottom: -40px;
  left: -40px;
  z-index: 80;/*-1;*/
  /*if this is set to inherit the pattern moves as the object is stretched
  so width needs to match the maximum_size in the js*/

  width: 800px;
  height: inherit;
  border-top: 0px;
  border-right: 0px;
  border-bottom: 40px solid;
  border-left: 40px solid;
  border-image: repeating-radial-gradient(transparent, olive 5px, brown 5px, olive 5px) 30;
  /*the grain looks nicer when the width is 220px so maybe alter the setting for the pattern
    try to recreate it by altering the numbers for the gradient*/
    /*if i use rgb colours and put transparency into the colours of the grain I could make the black not be as clearly drawn over*/
  /*  border-image: repeating-radial-gradient(transparent, olive 10px, brown 10px, olive 10px) 30;*/
}

.case2Inside {
  filter: blur(8px);/*8*/
  /*
  backdrop-filter:blur(1000px);
  isnt supported on chrome and most work around have found are based of using transparency in the background and pseudo layers which wont work for me as i want to be able to slide over elements

  */
  /*i havent looked at box shadow much that might of worked too or using filter-drop shadow*/
  height: inherit;
  content: "";
  /*for glass a little blur*/
  background: repeating-linear-gradient(-35deg, rgba(129, 207, 224, 0.4), rgba(255, 255, 255, 0.6) 15%, rgba(254, 241, 96, 0.3) 20%) content-box;
  box-shadow: 0 0 100px rgba(0, 0, 0, 0.1), inset 0 0 50px rgba(0, 0, 0, 0.8);
  /*the blur is nice with the black edge (especially with the box shadow on it too)*/
  /*is not blurring the background behind though!*/
  outline: 4px solid black;
  outline-offset: -4px;
}

.handle {
  position: absolute;

  top:40%;
  left: -40px;
  width: 120px;
  height: 15%;
  border-radius: 100px 100px 100px 100px;
  /*if i can cut image down to a quater then this would work
      border-radius: 100px 0px 0px 100px;
  */
  overflow: hidden;
  z-index: 90;
}

.handle::before {
  border: 20px solid brown;
  border-image-source: url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7NEYbD7_RG24-GQAwnWakNo22wnJMQi9Ra9i0obx6kSGLxUJ7);
  border-right: 0px;
}

.handle::before,
.handle::after {
  content: '';
  position: absolute;
  height: 100%;
  width: 50%;
  box-sizing: border-box;
  border-image-source: url(border-image-source: url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS7NEYbD7_RG24-GQAwnWakNo22wnJMQi9Ra9i0obx6kSGLxUJ7);
  /*number|%|fill|initial|inherit;*/
  border-image-slice: 30%;
  /*number|%|auto|initial|inherit;*/
  border-image-width: -10px;
  /*length|number|initial|inherit;*/
  border-image-outset: -10px;
  /*30px 100px 30px 40px; this puts the squeare in place too*/
  /*stretch|repeat|round|initial|inherit;*/
  border-image-repeat: round;
  /*close but not rounded on the inside*/
  /*trying to do something*/
  /*seems to do nothing*/
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.9), inset 0 0 5px rgba(0, 0, 0, 0.9);
}

.myflex-container {
  padding: 0;
  margin: 0;
  list-style: none;

  flex-wrap: wrap-reverse;
  display: flex;
  width:inherit;
  /*height:inherit; if set height it will spread pictures evenly needs to respond
  to them and make itself tall enough maybe maximum height and overflow hidden
  would help when lots of marbles*/
    /*justify-content:flex-end;*/
    position:absolute;
    bottom:40px;
    padding:0px 0px 10px 15px;
    /* max-height: height:inherit; not supported in ie "custom properties"*/
  /* doesnt work max-height:100;
    overflow:hidden;*/
/*max width works not height
    max-width:100%;
    max-height:10%;*/
  }

/*del when have images*/
.myflex-item {
  width: 100px;
  height: 100px;

  outline:solid black 2px;
  outline-offset:-2px;
  border-radius:100px;
  background: deepskyblue;
  padding: 0;
  margin: 0;

}



.pCard {
  /*need an equation for gradient and put the bottom centre 1/7th down it*/
  width: 3vw;
  height: 12vh;
  position: absolute;
  top: 24vh;
  right: 35vw;
  background-color: white;
  transform: perspective(4px) rotateY(2deg);
}

.pg2CanUse {
  height: 50vh;
  width: 50vw;
  /*to match the angle of the gradient will have to find the viewport ratio*/
  position: absolute;
  bottom: 5vh;
  right: 25vw;
  font-family: 'Noto Sans', sans-serif;
  font-size: 5rem;
  text-decoration: underline;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: pre;
}

.page1X0Y0 {
  position: relative;
  height: 100vh;
  width: 100vw;
}

.noScroll {
  overflow-y: hidden;
  overflow-x: hidden;
}

.Scroll {
  overflow-x: hidden;
}
/*make a and mymarble the same*/
.myMarble {
  border-radius: 40%;
  /*background delete*/
  background-color: blue;
  width: 100px;
  height: 100px;
  position: absolute;
}
.aMarble{
  border-radius: 40%;
  /*background delete*/
  background-color: white;
  width: 100px;
  height: 100px;

}

.invisible {
  opacity: 0;
  transition: opacity 2s linear;
}

.visible {
  opacity: 1;
  transition: opacity 2s linear;
}

.tab2.invisible {
  opacity: 0;
  transition: opacity 1s linear;
}

.tab2.visible {
  opacity: 1;
  transition: opacity 1s linear;
}

.myMarbleY {
  position: relative;
  top: 100px;
}

.myMarbleX {
  position: relative;
  left: -110px;
}

/*name duration function delay direction iteration fill state*/
/*page1stage1*/
/*maybe a set distance and put in repititions*/
.myMarbleYAnim {
  /*drop on text*/
  animation: yAxisStep1 1s cubic-bezier(1, .02, .91, .48) 1s normal 1 forwards running,
    /*waits till roll across text then falls*/
    yAxisStep2 0.5s cubic-bezier(1, .02, .91, .48) 3s normal 1 forwards running,
    /*shoots up*/
    yAxisStep3 0.5s cubic-bezier(.03, .86, .69, .78) 3.5s normal 1 forwards running;
}

.myMarbleXAnim {
  /*traj to text*/
  animation: xAxisStep1 1s linear 1s normal 1 forwards running,
    /*across text*/
    xAxisStep2 1s linear 2s normal 1 forwards running,
    /*fall off end*/
    xAxisStep3 0.5s ease-out 3s normal 1 forwards running;
  /*although made y 140 doesnt seem able to disappear of bottom of the screen way it goes off top*/
}

@keyframes yAxisStep1 {
  100% {
    transform: translateY(20vh)
  }
}

@keyframes yAxisStep2 {
  0% {
    transform: translateY(20vh)
  }

  100% {
    transform: translateY(140vh)
  }
}

@keyframes yAxisStep3 {
  0% {
    transform: translateY(140vh)
  }

  70% {}

  100% {
    transform: translateY(-20vh)
  }
}

@keyframes xAxisStep1 {
  100% {
    transform: translateX(35vw)
  }
}

@keyframes xAxisStep2 {
  0% {
    transform: translateX(35vw)
  }

  100% {
    transform: translateX(65vw)
  }
}

@keyframes xAxisStep3 {
  0% {
    transform: translateX(65vw)
  }

  100% {
    transform: translateX(85vw)
  }
}

/*make it so can toggle between rolling and end rolling with pseudo ::*/
.end-rolling {}

.rolling {
  animation:
    spin 2s linear infinite forwards;
}

@keyframes spin {

  /* trick will be starting from position it is in  */
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(720deg);
  }
}

.businessCard {
  background-color: #262626;
  border-style: groove;
  border-color: black;
  color: black;
  border-width: 5px 8px 8px 5px;
}

.buisnessCardText {
  text-align: center;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.fontOrnaments {
  font-size: 3rem;
  font-family: 'nymphetteregular';
}

.drinkChoices {
  justify-content: center;
  align-content: center;
  padding: 0;
  margin: 0;
  border: 0;
}

.drinkButton {
  justify-content: center;
  align-content: center;
  border: none;
  padding: 0;
  margin: 0;
  text-decoration: none;
  background: inherit;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  cursor: pointer;
  text-align: inherit;
  transition: background 250ms ease-in-out,
    transform 150ms ease;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.drinkButton:hover,
.drinkButton:focus {
  /*at the moment when the mouse is over the drink and clicks
it is still classed as hovering until the mouse is moved offset
the button at which point the duration kicks in the drink rights itself
this is despite removiing pointer event in js. a solution would be putting
a new object on button press over the button and disapearing the buttonsso the
new instantiated image is same rotation but isnt same object. Or if there
was a way of liberating the image from its hierachy position absolute not work
because it is still absolute relative to the thing it is in not a 0,0 coordinate
*/
  transition-duration: 1s;
  transform: rotate(-15deg);
}

.drinkButton:focus {
  outline: none;
}

/*

/*disable other buttons, put image overtop of button same location and float bottom left
roll ball same time top left and bounce across the words and down
then fade in corner stuff and have drink appear under the drink icon and the icon disappear
same time bounce the ball up and move view up slightly and reveal tab as it get to last 10% of screen
do both halfs of this action in 1s each
    */
.drinkButton:active {}

.my-animation {
  position: absolute;
  /*really want to delete and replace with another image unless its possible to make it fly to the new cell and go in it*/
  animation: takeDrink 1s linear forwards;
}

@keyframes takeDrink {

  /*could just use transition*/
  /*if set its start position it will slide but how do i get position its already at
jquery
*/
  /*currently relative to self*/
  0% {
    right: 0vw;
    top: 0vh;
    /*may already be rotated so want to be able just to set it*/
    transform: rotate(0);
    opacity: 1;
  }

  60% {
    transform: rotate(0);
  }

  80% {
    transform: rotate(-15deg);
  }

  100% {
    right: 50vw;
    top: 40vh;
    Opacity: 0;
  }
}

.drinkImages {
  vertical-align: top;
  max-height: 60px;
  border: 0;
  padding: 0;
  margin: 0;
}

.colTight {
  padding: 0;
  margin: 0;
  border: 0;
}

/*tried corners etc but not managed to change the corner colour within the code of the corner
can do it with a gradient or a border
*/
.corner-background {
  background-color: grey;
  position: fixed;
  height: 375px;
  width: 350px;
  Transform: rotate(45deg);
  bottom: -200px;
  Left: -200px;
  opacity: 0;
}

.corner-table {
  text-align: center;
  justify-content: center;
  align-items: center;
  vertical-align: top;
  max-height: 30px;
  border: 0;
  padding: 0px 75px 0px 75px;
  margin: 0px 0px 5px 7px;
  font-size: 3rem;
  color: #262626;
}

.corner-links {
  Transform: rotate(-45deg);
  max-height: 60px;
  border: 0;
  padding: 0;
  margin: 0;
}

#chosen-beverage {
  opacity: 0;
}

.fade-in-beverage {
  /*careful i am animating it twice as fading in the section it is in too*/
  animation: fadeIn 1.5s linear;
  animation-delay: 1s;
  animation-fill-mode: forwards;
}

.fade-in-corner {
  animation: fadeIn 1.5s linear forwards;
  animation-fill-mode: forwards;
}

.end-rolling {
  animation: spin ease-out linear 1s forwards;
}

@keyframes spin {

  /* trick will be starting from position it is in  */
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(720deg);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

/*use something like this to reduce to just the tea icon see media notes in notes document*/
@media (max-width:1028px) {}
